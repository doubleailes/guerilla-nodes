docformatrevision(19)
oid[1]=create("ShaderNodeMacro","","CellNoise")
	oid[2]=create("ShaderNodeSL","$1","FractVec")
		oid[3]=create("ShaderNodeIn","$2","Input1")
			set("$3.Desc",types.vector)
			set("$3.HideInput",false)
			set("$3.PlugName","Coords")
			set("$3.Value",0)
		oid[4]=create("ShaderNodeOut","$2","Output1")
			set("$4.PlugName","cellIdx")
		oid[5]=create("ShaderNodeOut","$2","Output2")
			set("$5.PlugName","cellCoords")
		set("$2.NodePos",{-130.5,-30})
		set("$2.Script","\010void fractVec (point Coords; output vector cellIdx, cellCoords)\010{\010\009// Computes the fractionnal part of the given coordinates.\010\009\010\009// %param Coords={type=types.vector, help=\"Input Coordinates\"}\010\010\009// cellIdx (vector): Index vector of the cell\010\009// cellCoords (vector): Fractional part of the coordinates (i.e. cell local coordinates)\010\010\009cellIdx = vector(floor(xcomp(Coords)), floor(ycomp(Coords)), floor(zcomp(Coords)));\010\009cellCoords = Coords - cellIdx;\010}")
	oid[6]=create("ShaderNodeIn","$1","Input1")
		set("$6.PlugName","Coords")
		set("$6.Value",0)
	oid[7]=create("ShaderNodeIn","$1","Input2")
		set("$7.PlugName","Scale")
		set("$7.Value",{5,5,5})
	oid[8]=create("ShaderNodeBinOp","$1","Multiply")
		oid[9]=create("ShaderNodeIn","$8","Input1")
			set("$9.Desc",LUIPSTypeNumber)
			set("$9.PlugName","Coords")
			set("$9.Value",0)
		oid[10]=create("ShaderNodeIn","$8","Input2")
			set("$10.Desc",LUIPSTypeNumber)
			set("$10.PlugName","Scale")
			set("$10.Value",1)
		oid[11]=create("ShaderNodeOut","$8","Output1")
			set("$11.PlugName","Output")
		set("$8.Mode","Multiply")
		set("$8.NodePos",{-322.25,-32})
	oid[12]=create("ShaderNodeMacroOutput","$1","Output")
		oid[13]=create("ShaderNodeIn","$12","Input1")
			set("$13.Desc",types.color)
			set("$13.Value",{0.5,0,0.5})
		set("$12.NodePos",{174,-13.5})
	oid[14]=create("ShaderNodeOut","$1","Output1")
		set("$14.PlugName","Output")
	oid[15]=create("ShaderNodeSL","$1","RandomF")
		oid[16]=create("ShaderNodeIn","$15","Input1")
			set("$16.Desc",types.vector)
			set("$16.HideInput",false)
			set("$16.PlugName","v")
			set("$16.Value",0)
		oid[17]=create("ShaderNodeOut","$15","Output1")
			set("$17.PlugName","Output")
		set("$15.NodePos",{16.5,-19})
		set("$15.Script","\010float randomf (vector v)\010{\010\009// Returns a random float between 0 and 1 for a given input vector.\010\010\009// %param v={type=types.vector, help=\"Input Vector\"}\010\009\010\009// v (vector): output random float\010\010\009v = vector(v[0]+1, v[1]+1, v[2]+1);\010\010\009float t = sin(v . vector(12.9898, 78.233, 43.47865)) * 43758.5453123;\010    return t - floor(t);\010}")
	oid[18]=create("GraphFrame","$1","Scale of input vector")
		set("$18.Color",{1,1,1})
		set("$18.Lock",false)
		set("$18.Notes","")
		set("$18.Opacity",0.1)
		set("$18.Position",{-594.90625,-118.25})
		set("$18.Size",{394,306})
	oid[19]=create("ShaderNode","$1","Vector")
		oid[20]=create("ShaderNodeIn","$19","Input1")
			set("$20.Desc",LUIPSTypeVector)
			set("$20.PlugName","Coords")
		oid[21]=create("ShaderNodeOut","$19","Output1")
			set("$21.PlugName","Output")
		set("$19.Code","= out1 arg1")
		set("$19.NodePos",{-516.625,-75.25})
	oid[22]=create("ShaderNode","$1","Vector1")
		oid[23]=create("ShaderNodeIn","$22","Input1")
			set("$23.Desc",LUIPSTypeVector)
			set("$23.PlugName","Scale")
		oid[24]=create("ShaderNodeOut","$22","Output1")
			set("$24.PlugName","Output")
		set("$22.Code","= out1 arg1")
		set("$22.NodePos",{-516.8125,50.75})
	set("$1.NodePos",{420.25,-58.75})
depend("$13.Plug","$17.Plug")
depend("$16.Plug","$4.Plug")
depend("$9.Plug","$21.Plug")
depend("$3.Plug","$11.Plug")
depend("$10.Plug","$24.Plug")
depend("$14.Plug","$13.Plug")
connect("$13.PlugName","$14.PlugName")
depend("$20.Plug","$6.Plug")
connect("$6.Desc","$20.Desc")
connect("$20.Value","$6.Value")
depend("$23.Plug","$7.Plug")
connect("$7.Desc","$23.Desc")
connect("$23.Value","$7.Value")
